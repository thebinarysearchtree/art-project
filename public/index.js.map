{
  "version": 3,
  "sources": ["../node_modules/artworkjs/src/BaseElement.js", "../node_modules/artworkjs/src/ElementArt.js", "../node_modules/artworkjs/src/AsyncElementArt.js", "../node_modules/artworkjs/src/proxies/html.js", "../node_modules/artworkjs/src/proxies/svg.js", "../node_modules/artworkjs/src/proxies/div.js", "../node_modules/artworkjs/src/proxies/element.js", "../node_modules/artworkjs/src/proxies/setter.js", "../node_modules/artworkjs/src/proxies/event.js", "../node_modules/artworkjs/src/utils.js", "../node_modules/artworkjs/src/artwork.js", "../node_modules/artworkjs/src/router.js", "../src/examples/Hello.js", "../src/examples/Timer.js", "../src/examples/Todo.js", "../src/examples/Thumbnail.js", "../src/examples/Routes.js", "../src/index.js"],
  "sourcesContent": ["class BaseElement extends HTMLElement {\n  styles;\n  state;\n  connected;\n  disconnected;\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n  }\n\n  afterRender() {\n    return null;\n  }\n\n  appendToShadow(element) {\n    this.afterRender();\n    if (this.styles) {\n      if (typeof this.styles === 'string') {\n        const style = document.createElement('style');\n        style.innerText = this.styles;\n        this.shadowRoot.append(style, element);\n      }\n      else {\n        this.shadowRoot.adoptedStyleSheets = [this.styles];\n        this.shadowRoot.append(element);\n      }\n    }\n    else {\n      this.shadowRoot.append(element);\n    }\n  }\n\n  connectedCallback() {\n    if (this.connected) {\n      const disconnected = this.connected();\n      if (disconnected) {\n        this.disconnected = disconnected;\n      }\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.disconnected) {\n      this.disconnected();\n    }\n  }\n}\n\nexport default BaseElement;\n", "import BaseElement from './BaseElement.js';\n\nclass ElementArt extends BaseElement {\n  renderShadow(...state) {\n    const element = this.render(...state);\n    this.appendToShadow(element);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default ElementArt;\n", "import BaseElement from './BaseElement.js';\n\nclass AsyncElementArt extends BaseElement {\n  async renderShadow(...state) {\n    const element = await this.render(...state);\n    this.appendToShadow(element);\n  }\n\n  async render() {\n    return null;\n  }\n}\n\nexport default AsyncElementArt;\n", "const elementCreators = {};\n\nconst createElement = (tag, properties) => {\n  const element = document.createElement(tag);\n  if (typeof properties === 'string' || typeof properties === 'number') {\n    element.innerText = properties;\n    return element;\n  }\n  if (!properties) {\n    return element;\n  }\n  if (properties.hasOwnProperty('class')) {\n    properties.className = properties.class;\n    delete properties.class;\n  }\n  if (properties.hasOwnProperty('text')) {\n    properties.innerText = properties.text;\n    delete properties.text;\n  }\n  return Object.assign(element, properties);\n}\n\nconst handler = {\n  get: function(target, tag, receiver) {\n    if (!elementCreators[tag]) {\n      elementCreators[tag] = (properties) => createElement(tag, properties);\n    }\n    return elementCreators[tag];\n  }\n}\n\nconst proxy = new Proxy(elementCreators, handler);\n\nexport default proxy;\n", "const elementCreators = {};\n\nconst createElement = (tag, properties) => {\n  const element = document.createElementNS(tag, 'http://www.w3.org/2000/svg');\n  if (!properties) {\n    return element;\n  }\n  for (const [key, value] of Object.entries(properties)) {\n    element.setAttribute(key, value);\n  }\n  return element;\n}\n\nconst handler = {\n  get: function(target, tag, receiver) {\n    if (!elementCreators[tag]) {\n      elementCreators[tag] = (properties) => createElement(tag, properties);\n    }\n    return elementCreators[tag];\n  }\n}\n\nconst proxy = new Proxy(elementCreators, handler);\n\nexport default proxy;\n", "const divs = {};\n\nconst handler = {\n  get: function(target, property, receiver) {\n    if (!divs[property]) {\n      const element = document.createElement('div');\n      element.className = property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      divs[property] = element;\n    }\n    return divs[property].cloneNode();\n  }\n}\n\nconst proxy = new Proxy(divs, handler);\n\nexport default proxy;\n", "const elements = {};\n\nconst handler = {\n  get: function(target, property, receiver) {\n    if (!elements[property]) {\n      const tagName = property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n      const element = document.createElement(tagName);\n      elements[property] = element;\n    }\n    return elements[property].cloneNode();\n  }\n}\n\nconst proxy = new Proxy(elements, handler);\n\nexport default proxy;\n", "const setters = {};\n\nconst handler = {\n  get: function(target, key, receiver) {\n    if (!setters[key]) {\n      let property = key.substring(3);\n      property = property[0].toLowerCase() + property.substring(1);\n      if (property === 'class') {\n        property = 'className';\n      }\n      if (property === 'text') {\n        property = 'innerText';\n      }\n      setters[key] = (values, elements) => {\n        for (const [key, value] of Object.entries(values)) {\n          elements[key][property] = value;\n        }\n      }\n    }\n    return setters[key];\n  }\n}\n\nconst proxy = new Proxy(setters, handler);\n\nexport default proxy;\n", "const events = {};\n\nconst handler = {\n  get: function(target, property, receiver) {\n    if (!events[property]) {\n      const type = property.substring(2).toLowerCase();\n      if (type === 'submit') {\n        events[property] = (element, listener, options) => {\n          element.addEventListener(type, (e) => {\n            e.preventDefault();\n            listener(e);\n          }, options);\n        }\n      }\n      else {\n        events[property] = (element, listener, options) => {\n          element.addEventListener(type, listener, options);\n        }\n      }\n    }\n    return events[property];\n  }\n}\n\nconst proxy = new Proxy(events, handler);\n\nexport default proxy;\n", "const htmlFor = (label, input, inputId) => {\n  label.htmlFor = inputId;\n  input.id = inputId;\n}\n\nconst makeElements = (tag, options) => {\n  const { property, camelToDash } = options;\n  const elements = {};\n\n  const handler = {\n    get: function(target, key, receiver) {\n      if (!elements[key]) {\n        const element = document.createElement(tag);\n        if (property) {\n          element[property] = camelToDash ? key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase() : key;\n        }\n        elements[key] = element;\n      }\n      return elements[key].cloneNode();\n    }\n  }\n\n  return new Proxy(elements, handler);\n}\n\nexport {\n  htmlFor,\n  makeElements\n};\n", "const makeArt = (name, elementClass) => {\n  customElements.define(name, elementClass);\n  return (...state) => {\n    const element = document.createElement(name);\n    element.state = state;\n    element.renderShadow(...state);\n    return element;\n  }\n}\n\nconst makeAsyncArt = (name, elementClass) => {\n  customElements.define(name, elementClass);\n  return async (...state) => {\n    const element = document.createElement(name);\n    element.state = state;\n    await element.renderShadow(...state);\n    return element;\n  }\n}\n\nexport {\n  makeAsyncArt,\n  makeArt\n};\n", "import html from './proxies/html.js';\n\nconst { a, p } = html;\n\nconst routers = [];\n\nhistory.scrollRestoration = 'manual';\n\nlet notFound = () => p('Page not found');\n\nconst getRoute = (url) => {\n  for (let i = routers.length - 1; i >= 0; i--) {\n    const router = routers[i];\n    const route = router.getRoute(url);\n    if (route) {\n      return {\n        route,\n        router\n      };\n    }\n  }\n  return {\n    route: {\n      handler: notFound,\n      groups: null\n    },\n    router: routers[0]\n  };\n}\n\nconst makeParams = (searchParams) => {\n  const params = {};\n  for (const [key, value] of searchParams) {\n    params[key] = value;\n  }\n  return params;\n}\n\nconst processRoute = (url) => {\n  const parsed = new URL(url);\n  const { pathname, searchParams } = parsed;\n  const { route, router } = getRoute(pathname);\n  const { handler, groups } = route;\n  const params = {\n    ...makeParams(searchParams), \n    ...groups\n  };\n  const component = handler(params);\n  const { root } = router;\n  if (root) {\n    root.replaceChildren(component);\n  }\n}\n\nwindow.addEventListener('popstate', (e) => {\n  processRoute(window.location.href);\n  const { x, y } = e.state.scroll;\n  window.scrollTo(x, y);\n});\n\nwindow.addEventListener('clickart', (e) => {\n  processRoute(e.href);\n});\n\nconst start = () => {\n  processRoute(window.location.href);\n};\n\nconst setNotFound = () => {\n  notFound = () => element;\n};\n\nconst pushState = (url, state) => {\n  history.pushState(state, '', url);\n  processRoute(`${location.origin}${url}`);\n};\n\nclass Router {\n  stringRoutes = new Map();\n  regexRoutes = [];\n  root;\n\n  constructor(root) {\n    this.root = root;\n    routers.push(this);\n  }\n\n  start() {\n    processRoute(window.location.href);\n  }\n  \n  setNotFound() {\n    notFound = () => element;\n  }\n\n  add(match, handler) {\n    if (typeof match === 'string') {\n      this.stringRoutes.set(match, handler);\n    }\n    else {\n      this.regexRoutes.push({ match, handler });\n    }\n  }\n\n  getRoute(url) {\n    const handler = this.stringRoutes.get(url);\n    if (handler) {\n      return {\n        handler,\n        groups: null\n      };\n    }\n    for (const route of this.regexRoutes) {\n      const { match, handler } = route;\n      const result = match.exec(url);\n      if (result) {\n        return {\n          handler,\n          groups: result.groups\n        }\n      }\n    }\n  }\n\n  remove() {\n    routers.splice(routers.findIndex(r => r === this));\n  }\n}\n\nconst routerLink = (properties) => {\n  const anchor = a(properties);\n  const href = anchor.href;\n  anchor.addEventListener('click', (e) => {\n    const leftClick = e.button === 0;\n    const relevantTarget = !properties.target || properties.target === '_self';\n    const modifierPressed = e.metaKey || e.altKey || e.ctrlKey || e.shiftKey;\n\n    if (leftClick && relevantTarget && !modifierPressed) {\n      e.preventDefault();\n      const scroll = {\n        x: window.scrollX,\n        y: window.scrollY\n      };\n      history.replaceState({...history.state, scroll }, '');\n      history.pushState(properties.state, '', href);\n      const event = new Event('clickart');\n      event.href = href;\n      window.dispatchEvent(event);\n    }\n  });\n  return anchor;\n}\n\nexport {\n  start,\n  setNotFound,\n  pushState,\n  Router,\n  routerLink\n};\n", "import { makeArt, ElementArt, html } from 'artworkjs';\n\nconst { div } = html;\n\nclass HelloWorld extends ElementArt {\n  render(name) {\n    return div(`Hello ${name}`);\n  }\n}\n\nconst helloWorld = makeArt('hello-world', HelloWorld);\n\nexport default helloWorld;\n", "import { makeArt, ElementArt, elements } from 'artworkjs';\n\nclass SecondsTimer extends ElementArt {\n  render() {\n    let seconds = 0;\n\n    const { div } = elements;\n\n    const tick = () => {\n      div.innerText = `Seconds: ${seconds}`;\n      seconds++;\n    };\n\n    tick();\n\n    this.connected = () => {\n      const intervalId = setInterval(tick, 1000);\n      return () => clearInterval(intervalId);\n    };\n\n    return div;\n  }\n}\n\nconst secondsTimer = makeArt('seconds-timer', SecondsTimer);\n\nexport default secondsTimer;\n", "import { makeArt, ElementArt, elements, html, setters, htmlFor, events } from 'artworkjs';\n\nconst li = html.li;\nconst setText = setters.setText;\nconst onSubmit = events.onSubmit;\n\nclass TodoList extends ElementArt {\n  constructor() {\n    super();\n    this.styles = 'form > * { margin-right: 5px; }';\n  }\n\n  render() {\n    const { div, h3, ul, form, label, input, button } = elements;\n\n    const text = {\n      h3: 'Todo', \n      label: 'What needs to be done?',\n      button: 'Add #1'\n    };\n\n    setText(text, { h3, label, button });\n\n    htmlFor(label, input, 'new-todo');\n\n    form.append(label, input, button);\n\n    onSubmit(form, (e) => {\n      const todo = input.value;\n      if (todo.length === 0) {\n        return;\n      }\n      const item = li(todo);\n      ul.append(item);\n      \n      button.innerText = `Add #${ul.childElementCount + 1}`;\n      input.value = '';\n    });\n\n    div.append(h3, ul, form);\n\n    return div;\n  }\n}\n\nconst todoList = makeArt('todo-list', TodoList);\n\nexport default todoList;\n", "import { makeArt, ElementArt, divs, routerLink, html } from 'artworkjs';\nimport styles from './Thumbnail.css' assert { type: 'css' };\n\nconst a = (href, text) => routerLink({ href, text: text ? text : null });\nconst span = html.span;\n\nclass MovieThumbnail extends ElementArt {\n  constructor() {\n    super();\n    this.styles = styles;\n  }\n\n  render(movie) {\n    const { root, thumbnail, details } = divs;\n\n    const { id, name, year } = movie;\n\n    this.toggleSelected = (selectedId) => selectedId === id ? root.className = 'root selected' : root.className = 'root';\n    \n    details.append(name, span(year));\n    root.append(thumbnail, details);\n\n    const link = a(`/routes?v=${id}`);\n    link.append(root);\n\n    return link;\n  }\n}\n\nconst thumbnail = makeArt('movie-thumbnail', MovieThumbnail);\n\nexport default thumbnail;\n", "import { makeAsyncArt, AsyncElementArt, html, divs, Router } from 'artworkjs';\nimport thumbnail from './Thumbnail.js';\nimport styles from './Routes.css' assert { type: 'css' };\n\nconst { h3 } = html;\n\nconst movies = [\n  {\n    id: 1,\n    name: 'Star Wars - A New Hope',\n    year: 1977\n  },\n  {\n    id: 2,\n    name: 'Star Wars - The Empire Strikes Back',\n    year: 1980\n  },\n  {\n    id: 3,\n    name: 'Star Wars - Return of the Jedi',\n    year: 1983\n  }\n];\n\nconst getMovies = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(movies), 1000);\n  });\n}\n\nclass MovieRoutes extends AsyncElementArt {\n  constructor() {\n    super();\n    this.styles = styles;\n  }\n\n  async render() {\n    const { root, sidePanel, content, video } = divs;\n\n    const movies = await getMovies();\n    const thumbnails = movies.map(m => thumbnail(m));\n    sidePanel.append(...thumbnails);\n\n    this.connected = () => {\n      const router = new Router();\n\n      router.add('/routes', ({ v }) => {\n        const videoId = parseInt(v, 10);\n        const { name } = movies.find(m => m.id === videoId);\n\n        thumbnails.forEach(t => t.toggleSelected(videoId));\n        content.replaceChildren(video, h3(name));\n      });\n      \n      router.start();\n      return () => router.remove();\n    }\n\n    root.append(content, sidePanel);\n    return root;\n  }\n}\n\nconst movieRoutes = makeAsyncArt('movie-routes', MovieRoutes);\n\nexport default movieRoutes;\n", "import { Router, routerLink, ElementArt, makeArt, elements, html } from 'artworkjs';\nimport hello from './examples/Hello.js';\nimport timer from './examples/Timer.js';\nimport todo from './examples/Todo.js';\nimport routes from './examples/Routes.js';\nimport styles from './HomePage.css' assert { type: 'css' };\n\nconst root = document.getElementById('root');\n\nconst router = new Router(root);\n\nconst { div } = html;\n\nconst a = (href, text) => routerLink({ href, text });\n\nclass HomePage extends ElementArt {\n  constructor() {\n    super();\n    this.styles = styles;\n  }\n\n  render() {\n    const { div } = elements;\n\n    const a1 = a('/hello?name=World', 'Hello World');\n    const a2 = a('/timer', 'Timer');\n    const a3 = a('/todo', 'Todo');\n    const a4 = a('/routes?v=1', 'Routes');\n\n    div.append(a1, a2, a3, a4);\n\n    return div;\n  }\n}\n\nconst home = makeArt('home-page', HomePage);\n\nrouter.add('/', () => home());\nrouter.add('/hello', ({ name }) => hello(name));\nrouter.add('/timer', () => timer());\nrouter.add('/todo', () => todo());\nrouter.add(/\\/routes/, () => {\n  const loading = div('Loading...');\n  routes().then((r) => loading.replaceWith(r));\n  return loading;\n});\n\nrouter.start();\n"],
  "mappings": "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",
  "names": []
}
